{"ast":null,"code":"var _jsxFileName = \"/Users/dima/Desktop/REACT Course Udemy/food-order-app/src/Store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReduser = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedItems = state.items.concat(action.item); // instead of push it doesn't editing existing array but return new array\n    // because we dont want to update our old state snapshot \n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReduser, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider; // The goal of this Component is to manage the current context to data and provide that context\n// to all components that want access to it\n// And we can also add all the logic for managing the context data to this component\n// so that all about that is contained in one component and no other component needs to deal with that\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReduser","state","action","type","updatedItems","concat","item","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","id","cartContext","addItem","removeItem","children"],"sources":["/Users/dima/Desktop/REACT Course Udemy/food-order-app/src/Store/CartProvider.js"],"sourcesContent":["import { useReducer } from 'react';\nimport CartContext from './cart-context';\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n};\n\nconst cartReduser = (state, action) => {\n  if (action.type === 'ADD') {\n      const updatedItems = state.items.concat(action.item); // instead of push it doesn't editing existing array but return new array\n      // because we dont want to update our old state snapshot \n  }\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  const [cartState, dispatchCartAction] = useReducer(\n    cartReduser,\n    defaultCartState\n  );\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({ type: 'ADD', item: item });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({ type: 'REMOVE', id: id });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n  };\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n\n// The goal of this Component is to manage the current context to data and provide that context\n// to all components that want access to it\n\n// And we can also add all the logic for managing the context data to this component\n// so that all about that is contained in one component and no other component needs to deal with that\n"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;EACvBC,KAAK,EAAE,EADgB;EAEvBC,WAAW,EAAE;AAFU,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACrC,IAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;IACvB,MAAMC,YAAY,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAArB,CADuB,CAC+B;IACtD;EACH;;EACD,OAAOT,gBAAP;AACD,CAND;;AAQA,MAAMU,YAAY,GAAGC,KAAK,IAAI;EAAA;;EAC5B,MAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCf,UAAU,CAChDK,WADgD,EAEhDH,gBAFgD,CAAlD;;EAKA,MAAMc,oBAAoB,GAAGL,IAAI,IAAI;IACnCI,kBAAkB,CAAC;MAAEP,IAAI,EAAE,KAAR;MAAeG,IAAI,EAAEA;IAArB,CAAD,CAAlB;EACD,CAFD;;EAIA,MAAMM,yBAAyB,GAAGC,EAAE,IAAI;IACtCH,kBAAkB,CAAC;MAAEP,IAAI,EAAE,QAAR;MAAkBU,EAAE,EAAEA;IAAtB,CAAD,CAAlB;EACD,CAFD;;EAIA,MAAMC,WAAW,GAAG;IAClBhB,KAAK,EAAEW,SAAS,CAACX,KADC;IAElBC,WAAW,EAAEU,SAAS,CAACV,WAFL;IAGlBgB,OAAO,EAAEJ,oBAHS;IAIlBK,UAAU,EAAEJ;EAJM,CAApB;EAOA,oBACE,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAEE,WAA7B;IAAA,UACGN,KAAK,CAACS;EADT;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CA1BD;;GAAMV,Y;;KAAAA,Y;AA4BN,eAAeA,YAAf,C,CAEA;AACA;AAEA;AACA"},"metadata":{},"sourceType":"module"}